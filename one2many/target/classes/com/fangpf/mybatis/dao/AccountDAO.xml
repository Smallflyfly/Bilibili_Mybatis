<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fangpf.mybatis.dao.AccountDAO">

<!--    定义封装account和user的resultMap-->
    <resultMap id="accountUserMap" type="account">
        <id property="id" column="aid"/>
        <result property="uid" column="uid"/>
        <result property="money" column="money"/>
<!--        一对一的关系映射：配置封装user的内容-->
        <association property="user" column="uid" javaType="user">
            <id property="id" column="id"/>
            <result column="username" property="username"/>
            <result column="address" property="address"/>
            <result column="sex" property="sex"/>
            <result column="birthday" property="birthday"/>
        </association>
    </resultMap>
    <!--配置查询所有  其中id不能乱写必须是dao接口中的方法  resultType写的是实体类的全路径-->
    <select id="findAll" resultMap="accountUserMap">
        select u.*,a.id as aid, a.uid, a.money from account a, user u where u.id = a.uid;
    </select>

    <insert id="saveUser" parameterType="com.fangpf.mybatis.domain.User">
        <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values (#{username}, #{address}, #{sex}, #{birthday});
    </insert>

    <update id="update" parameterType="com.fangpf.mybatis.domain.User">
        update user set username=#{username}, address=#{address}, sex=#{sex}, birthday=#{birthday} where id = #{id};
    </update>

    <delete id="delete" parameterType="Integer">
        delete from user where id = #{id}
    </delete>

    <select id="findByID" parameterType="Integer" resultType="com.fangpf.mybatis.domain.User">
        select * from user where id = #{id}
    </select>

    <select id="findByName" parameterType="String" resultType="com.fangpf.mybatis.domain.User">
        select * from user where username like #{username};
    </select>

    <select id="countUsername" resultType="Integer">
        select count(*) from user;
    </select>

</mapper>